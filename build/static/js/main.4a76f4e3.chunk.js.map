{"version":3,"sources":["index.js"],"names":["tf","require","headers","Content-Type","names","modelWeight","modelHeight","App","props","_this","Object","D_projects_object_detection_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","D_projects_object_detection_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_projects_object_detection_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","videoRef","React","createRef","canvasRef","state","model","preview","userid","proctorid","examid","predictions","pushToDynamodb","predict","test","id","concat","eid","cid","ts","timestamp","pid","JSON","stringify","axios","post","then","response","catch","err","checkwithVideo","videointerval","undefined","setInterval","onImageChange","cropToCanvas","image","canvas","ctx","naturalWidth","videoWidth","naturalHeight","videoHeight","clearRect","width","height","fillStyle","fillRect","ratio","Math","min","newWidth","round","newHeight","drawImage","current","getContext","input","tidy","resizeBilinear","browser","fromPixels","div","expandDims","executeAsync","res","detectiondata","detection","font","textBaseline","i","_res","D_projects_object_detection_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","boxes","scores","classes","valid_detections","boxes_data","dataSync","scores_data","classes_data","valid_detections_data","dispose","_boxes_data$slice","slice","_boxes_data$slice2","x1","y1","x2","y2","klass","score","toFixed","strokeStyle","lineWidth","strokeRect","textWidth","measureText","textHeight","parseInt","_boxes_data$slice3","_boxes_data$slice4","push","class","fillText","Date","now","length","handleSubmit","bind","D_projects_object_detection_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","handleuserChange","handleExamChange","handleproctorChange","_this2","navigator","mediaDevices","getUserMedia","webCamPromise","audio","video","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","loadGraphModel","setState","console","log","all","values","error","event","target","value","preventDefault","startcamera","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","onSubmit","for","type","placeholder","onChange","autoPlay","style","visibility","muted","ref","className","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.4a76f4e3.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\n// import * as mdb from 'mdb-ui-kit'; // lib\n// import { Input } from 'mdb-ui-kit'; // module\n\n// import MagicDropzone from \"react-magic-dropzone\";\nimport \"./styles.css\";\nconst tf = require('@tensorflow/tfjs');\nconst weights = '/web_model_old/model.json';\nconst headers = {\n  'Content-Type': 'application/json'\n}\nconst names = ['Calculator', 'Cup', 'Ear_Piece', 'GoogleGlass', 'Head_Phone', 'Laptop',\n  'MobilePhone', 'Notebook', 'Pen', 'Smart_watch', 'Spec', 'SunGlass'\n]\nconst [modelWeight, modelHeight] = [640, 640];\nclass App extends React.Component {\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n  state = {\n    model: null,\n    preview: \"\",\n    userid: \"\",\n    proctorid: \"\",\n    examid: \"\",\n    predictions: []\n  };\n  componentDidMount() {\n  }\n  constructor(props) {\n    super(props)\n    this.state = {\n      model: null,\n      preview: \"\",\n      userid: \"\",\n      proctorid: \"\",\n      examid: \"\",\n      predictions: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleuserChange = this.handleuserChange.bind(this)\n    this.handleExamChange = this.handleExamChange.bind(this)\n    this.handleproctorChange = this.handleproctorChange.bind(this)\n  }\n\n  startcamera() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n\n      const modelPromise = tf.loadGraphModel(weights).then(model => {\n        this.setState({\n          model: model\n        });\n        console.log(\"model ready......\", model)\n        return this.state.model;\n      });\n      Promise.all([modelPromise, webCamPromise])\n        .then(values => {\n          // this.detectFrame(this.videoRef.current, values[0]);\n          this.checkwithVideo()\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n  pushToDynamodb = (predict) => {\n    let test = {\n      \"id\": `${this.state.userid}_${this.state.examid}`,\n      \"eid\": this.state.examid,\n      \"cid\": this.state.userid,\n      \"ts\": predict.timestamp,\n      \"pid\": this.state.proctorid,\n      \"predict\": JSON.stringify(predict)\n    }\n    axios.post('https://sh3x2x9en3.execute-api.us-east-1.amazonaws.com/test/', test, { headers: headers })\n      .then(response => {\n        //console.log(response)\n      }).catch(err => {\n        //console.log(err)\n      })\n  }\n\n  checkwithVideo = () => {\n    let videointerval;\n    if (videointerval === undefined) {\n      videointerval = setInterval(() => {\n        this.onImageChange()\n      }, 100)\n    }\n  };\n\n  cropToCanvas = (image, canvas, ctx) => {\n    const naturalWidth = image.videoWidth;\n    const naturalHeight = image.videoHeight;\n    // canvas.width = image.width;\n    // canvas.height = image.height;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const ratio = Math.min(canvas.width / image.videoWidth, canvas.height / image.videoHeight);\n    const newWidth = Math.round(naturalWidth * ratio);\n    const newHeight = Math.round(naturalHeight * ratio);\n    ctx.drawImage(this.videoRef.current, 0, 0, naturalWidth, naturalHeight, (canvas.width - newWidth) / 2, (canvas.height - newHeight) / 2, newWidth, newHeight,);\n  };\n\n  onImageChange = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // this.cropToCanvas(this.videoRef.current, canvas, ctx);\n    const input = tf.tidy(() => {\n      return tf.image.resizeBilinear(tf.browser.fromPixels(this.videoRef.current), [modelWeight, modelHeight])\n        .div(255.0).expandDims(0);\n    });\n    this.state.model.executeAsync(input).then(res => {\n      let detectiondata = {\n        detection: [],\n        timestamp: \"\"\n      };\n      // Font options.\n      const font = \"16px sans-serif\";\n      ctx.font = font;\n      ctx.textBaseline = \"top\";\n      const [boxes, scores, classes, valid_detections] = res;\n      const boxes_data = boxes.dataSync();\n      const scores_data = scores.dataSync();\n      const classes_data = classes.dataSync();\n      const valid_detections_data = valid_detections.dataSync()[0];\n      tf.dispose(res)\n      tf.dispose(input)\n\n\n\n      var i;\n      for (i = 0; i < valid_detections_data; ++i) {\n        let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\n        x1 *= canvas.width;\n        x2 *= canvas.width;\n        y1 *= canvas.height;\n        y2 *= canvas.height;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const klass = names[classes_data[i]];\n        const score = scores_data[i].toFixed(2);\n        // Draw the bounding box.\n        ctx.strokeStyle = \"#00FFFF\";\n        ctx.lineWidth = 4;\n        ctx.strokeRect(x1, y1, width, height);\n        //console.log('x1',x1)\n        // Draw the label background.\n        ctx.fillStyle = \"#00FFFF\";\n        const textWidth = ctx.measureText(klass + \":\" + score).width;\n        const textHeight = parseInt(font, 10); // base 10\n        ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\n      }\n      for (i = 0; i < valid_detections_data; ++i) {\n        let [x1, y1, ,] = boxes_data.slice(i * 4, (i + 1) * 4);\n        x1 *= canvas.width;\n        y1 *= canvas.height;\n        const klass = names[classes_data[i]];\n        const score = scores_data[i].toFixed(2);\n        //console.log('klass ',klass, ', score', score)\n        detectiondata.detection.push({ \"class\": klass, \"score\": score })\n        // Draw the text last to ensure it's on top.\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(klass + \":\" + score, x1, y1);\n      }\n      detectiondata.timestamp = Date.now()\n      if (detectiondata.detection && detectiondata.detection.length > 0) {\n        this.pushToDynamodb(detectiondata)\n      }\n      // this.onImageChange()\n      // console.log(score)\n    });\n  };\n\n  handleuserChange(event) {\n    this.setState({\n      userid: event.target.value\n    })\n  }\n\n  handleExamChange(event) {\n    this.setState({\n      examid: event.target.value\n    })\n  }\n\n  handleproctorChange(event) {\n    this.setState({\n      proctorid: event.target.value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.userid !== \"\" && this.state.examid !== \"\" && this.state.proctorid !== \"\") {\n      this.startcamera()\n    }\n  }\n\n  render() {\n    return (\n\n      // <div class=\"container\">\n      <div class=\"row \">\n        <div class=\"col-md-2\">\n          <h1 class=\"heading\">Object Detection </h1>\n          <form class=\"p-2\" onSubmit={this.handleSubmit}>\n            <div class=\"form-group mar\">\n              <label for=\"candiadteID\">Candidate ID:</label>\n              <input type=\"text\" class='form-control' id='candiadateId' value={this.state.userid} placeholder=\"enter candidateId\" onChange={this.handleuserChange} />\n            </div>\n            <div class=\"form-group  mar\">\n              <label for=\"examID\">Exam ID:</label>\n              <input type=\"text\" class='form-control' value={this.state.examid} onChange={this.handleExamChange} placeholder='enter examID' />\n            </div>\n            <div class=\"form-group  mar\">\n              <label for=\"proctorID\">Proctor ID:</label>\n              <input type=\"text\" class='form-control' value={this.state.proctorid} onChange={this.handleproctorChange} placeholder='enter proctorID' />\n            </div>\n            <input type=\"submit\" class=\"btn button-width text-white\" value=\"Submit\" />\n\n          </form>\n        </div>\n        <div class=\"col-md-5 style1\">\n          <video\n            class=\"test\"\n            // className=\"size\"\n            autoPlay\n            style={{ visibility: '' }}\n            muted\n            ref={this.videoRef\n            }\n            width=\"500\"\n            // height=\"840\"\n            height=\"800px\"\n          />\n\n        </div>\n        <div class=\"col-md-5 canva\">\n          <h1 class=\"heading\">Proctor View </h1>\n          <canvas\n            className=\"size\"\n            ref={this.canvasRef}\n            style={{ visibility: '' }}\n            width=\"500\"\n            height=\"500\"\n          />\n        </div>\n      </div>\n      // </div>\n    );\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}