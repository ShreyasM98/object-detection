{"ast":null,"code":"import _slicedToArray from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\projects\\\\object-detection\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\projects\\\\object-detection\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios'; // import * as mdb from 'mdb-ui-kit'; // lib\n// import { Input } from 'mdb-ui-kit'; // module\n// import MagicDropzone from \"react-magic-dropzone\";\n\nimport \"./styles.css\";\nvar display = true;\n\nvar tf = require('@tensorflow/tfjs');\n\nvar weights = '/web_model_old/model.json';\nvar headers = {\n  'Content-Type': 'application/json'\n};\nvar names = ['Calculator', 'Cup', 'Ear_Piece', 'GoogleGlass', 'Head_Phone', 'Laptop', 'MobilePhone', 'Notebook', 'Pen', 'Smart_watch', 'Spec', 'SunGlass'];\nvar modelWeight = 640,\n    modelHeight = 640;\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// display ? handleScreen1() : handleScreen2();\n    }\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.videoRef = React.createRef();\n    _this.canvasRef = React.createRef();\n    _this.state = {\n      model: null,\n      preview: \"\",\n      userid: \"\",\n      proctorid: \"\",\n      examid: \"\",\n      predictions: []\n    };\n\n    _this.pushToDynamodb = function (predict) {\n      var test = {\n        \"id\": \"\".concat(_this.state.userid, \"_\").concat(_this.state.examid),\n        \"eid\": _this.state.examid,\n        \"cid\": _this.state.userid,\n        \"ts\": predict.timestamp,\n        \"pid\": _this.state.proctorid,\n        \"predict\": JSON.stringify(predict)\n      };\n      axios.post('https://sh3x2x9en3.execute-api.us-east-1.amazonaws.com/test/', test, {\n        headers: headers\n      }).then(function (response) {//console.log(response)\n      }).catch(function (err) {//console.log(err)\n      });\n    };\n\n    _this.checkwithVideo = function () {\n      var videointerval;\n\n      if (videointerval === undefined) {\n        videointerval = setInterval(function () {\n          _this.onImageChange();\n        }, 100);\n      }\n    };\n\n    _this.cropToCanvas = function (image, canvas, ctx) {\n      var naturalWidth = image.videoWidth;\n      var naturalHeight = image.videoHeight; // canvas.width = image.width;\n      // canvas.height = image.height;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.fillStyle = \"#000000\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      var ratio = Math.min(canvas.width / image.videoWidth, canvas.height / image.videoHeight);\n      var newWidth = Math.round(naturalWidth * ratio);\n      var newHeight = Math.round(naturalHeight * ratio);\n      ctx.drawImage(_this.videoRef.current, 0, 0, naturalWidth, naturalHeight, (canvas.width - newWidth) / 2, (canvas.height - newHeight) / 2, newWidth, newHeight);\n    };\n\n    _this.onImageChange = function () {\n      var canvas = _this.canvasRef.current;\n      var ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // this.cropToCanvas(this.videoRef.current, canvas, ctx);\n\n      var input = tf.tidy(function () {\n        return tf.image.resizeBilinear(tf.browser.fromPixels(_this.videoRef.current), [modelWeight, modelHeight]).div(255.0).expandDims(0);\n      });\n\n      _this.state.model.executeAsync(input).then(function (res) {\n        var detectiondata = {\n          detection: [],\n          timestamp: \"\"\n        }; // Font options.\n\n        var font = \"16px sans-serif\";\n        ctx.font = font;\n        ctx.textBaseline = \"top\";\n\n        var _res = _slicedToArray(res, 4),\n            boxes = _res[0],\n            scores = _res[1],\n            classes = _res[2],\n            valid_detections = _res[3];\n\n        var boxes_data = boxes.dataSync();\n        var scores_data = scores.dataSync();\n        var classes_data = classes.dataSync();\n        var valid_detections_data = valid_detections.dataSync()[0];\n        tf.dispose(res);\n        tf.dispose(input);\n        var i;\n\n        for (i = 0; i < valid_detections_data; ++i) {\n          var _boxes_data$slice = boxes_data.slice(i * 4, (i + 1) * 4),\n              _boxes_data$slice2 = _slicedToArray(_boxes_data$slice, 4),\n              x1 = _boxes_data$slice2[0],\n              y1 = _boxes_data$slice2[1],\n              x2 = _boxes_data$slice2[2],\n              y2 = _boxes_data$slice2[3];\n\n          x1 *= canvas.width;\n          x2 *= canvas.width;\n          y1 *= canvas.height;\n          y2 *= canvas.height;\n          var width = x2 - x1;\n          var height = y2 - y1;\n          var klass = names[classes_data[i]];\n          var score = scores_data[i].toFixed(2); // Draw the bounding box.\n\n          ctx.strokeStyle = \"#00FFFF\";\n          ctx.lineWidth = 4;\n          ctx.strokeRect(x1, y1, width, height); //console.log('x1',x1)\n          // Draw the label background.\n\n          ctx.fillStyle = \"#00FFFF\";\n          var textWidth = ctx.measureText(klass + \":\" + score).width;\n          var textHeight = parseInt(font, 10); // base 10\n\n          ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\n        }\n\n        for (i = 0; i < valid_detections_data; ++i) {\n          var _boxes_data$slice3 = boxes_data.slice(i * 4, (i + 1) * 4),\n              _boxes_data$slice4 = _slicedToArray(_boxes_data$slice3, 3),\n              _x = _boxes_data$slice4[0],\n              _y = _boxes_data$slice4[1];\n\n          _x *= canvas.width;\n          _y *= canvas.height;\n          var _klass = names[classes_data[i]];\n\n          var _score = scores_data[i].toFixed(2); //console.log('klass ',klass, ', score', score)\n\n\n          detectiondata.detection.push({\n            \"class\": _klass,\n            \"score\": _score\n          }); // Draw the text last to ensure it's on top.\n\n          ctx.fillStyle = \"#000000\";\n          ctx.fillText(_klass + \":\" + _score, _x, _y);\n        }\n\n        detectiondata.timestamp = Date.now();\n\n        if (detectiondata.detection && detectiondata.detection.length > 0) {\n          _this.pushToDynamodb(detectiondata);\n        } // this.onImageChange()\n        // console.log(score)\n\n      });\n    };\n\n    _this.state = {\n      model: null,\n      preview: \"\",\n      userid: \"\",\n      proctorid: \"\",\n      examid: \"\",\n      predictions: []\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleuserChange = _this.handleuserChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleExamChange = _this.handleExamChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleproctorChange = _this.handleproctorChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"startcamera\",\n    value: function startcamera() {\n      var _this2 = this;\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        var webCamPromise = navigator.mediaDevices.getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        }).then(function (stream) {\n          window.stream = stream;\n          _this2.videoRef.current.srcObject = stream;\n          return new Promise(function (resolve, reject) {\n            _this2.videoRef.current.onloadedmetadata = function () {\n              resolve();\n            };\n          });\n        });\n        var modelPromise = tf.loadGraphModel(weights).then(function (model) {\n          _this2.setState({\n            model: model\n          });\n\n          console.log(\"model ready......\", model);\n          return _this2.state.model;\n        });\n        Promise.all([modelPromise, webCamPromise]).then(function (values) {\n          // this.detectFrame(this.videoRef.current, values[0]);\n          _this2.checkwithVideo();\n        }).catch(function (error) {\n          console.error(error);\n        });\n      }\n    }\n  }, {\n    key: \"handleuserChange\",\n    value: function handleuserChange(event) {\n      this.setState({\n        userid: event.target.value\n      });\n    }\n  }, {\n    key: \"handleExamChange\",\n    value: function handleExamChange(event) {\n      this.setState({\n        examid: event.target.value\n      });\n    }\n  }, {\n    key: \"handleproctorChange\",\n    value: function handleproctorChange(event) {\n      this.setState({\n        proctorid: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      event.preventDefault();\n\n      if (this.state.userid !== \"\" && this.state.examid !== \"\" && this.state.proctorid !== \"\") {\n        this.startcamera();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return (\n        /*#__PURE__*/\n        // <div className=\"container\">\n        React.createElement(\"div\", {\n          className: \"row \",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 7\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"heading\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 11\n          }\n        }, \"Object Detection \"), /*#__PURE__*/React.createElement(\"form\", {\n          className: \"p-2\",\n          onSubmit: this.handleSubmit,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group mar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"candiadteID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }\n        }, \"Candidate ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"candiadateId\",\n          value: this.state.userid,\n          placeholder: \"enter candidateId\",\n          onChange: this.handleuserChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group  mar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"examID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }\n        }, \"Exam ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.examid,\n          onChange: this.handleExamChange,\n          placeholder: \"enter examID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"form-group  mar\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"proctorID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }\n        }, \"Proctor ID:\"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.proctorid,\n          onChange: this.handleproctorChange,\n          placeholder: \"enter proctorID\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"submit\",\n          className: \"btn button-width text-white\",\n          value: \"Submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-md-7 style1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"video\", {\n          className: \"test\",\n          autoPlay: true // style={{ visibility: 'hidden' }}\n          ,\n          muted: true,\n          ref: this.videoRef,\n          width: \"500px\",\n          height: \"800px\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 11\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \" canva\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          className: \"heading\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 11\n          }\n        }, \"Proctor View \"), /*#__PURE__*/React.createElement(\"canvas\", {\n          className: \"size\",\n          ref: this.canvasRef,\n          style: {\n            visibility: ''\n          },\n          width: \"500\",\n          height: \"500\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 11\n          }\n        }))) // </div>\n\n      );\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["D:/projects/object-detection/src/index.js"],"names":["React","useState","ReactDOM","axios","display","tf","require","weights","headers","names","modelWeight","modelHeight","App","props","videoRef","createRef","canvasRef","state","model","preview","userid","proctorid","examid","predictions","pushToDynamodb","predict","test","timestamp","JSON","stringify","post","then","response","catch","err","checkwithVideo","videointerval","undefined","setInterval","onImageChange","cropToCanvas","image","canvas","ctx","naturalWidth","videoWidth","naturalHeight","videoHeight","clearRect","width","height","fillStyle","fillRect","ratio","Math","min","newWidth","round","newHeight","drawImage","current","getContext","input","tidy","resizeBilinear","browser","fromPixels","div","expandDims","executeAsync","res","detectiondata","detection","font","textBaseline","boxes","scores","classes","valid_detections","boxes_data","dataSync","scores_data","classes_data","valid_detections_data","dispose","i","slice","x1","y1","x2","y2","klass","score","toFixed","strokeStyle","lineWidth","strokeRect","textWidth","measureText","textHeight","parseInt","push","fillText","Date","now","length","handleSubmit","bind","handleuserChange","handleExamChange","handleproctorChange","navigator","mediaDevices","getUserMedia","webCamPromise","audio","video","facingMode","stream","window","srcObject","Promise","resolve","reject","onloadedmetadata","modelPromise","loadGraphModel","setState","console","log","all","values","error","event","target","value","preventDefault","startcamera","visibility","Component","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from 'axios';\n// import * as mdb from 'mdb-ui-kit'; // lib\n// import { Input } from 'mdb-ui-kit'; // module\n\n// import MagicDropzone from \"react-magic-dropzone\";\nimport \"./styles.css\";\nlet display = true;\nconst tf = require('@tensorflow/tfjs');\nconst weights = '/web_model_old/model.json';\nconst headers = {\n  'Content-Type': 'application/json'\n}\nconst names = ['Calculator', 'Cup', 'Ear_Piece', 'GoogleGlass', 'Head_Phone', 'Laptop',\n  'MobilePhone', 'Notebook', 'Pen', 'Smart_watch', 'Spec', 'SunGlass'\n]\nconst [modelWeight, modelHeight] = [640, 640];\n\n\n\n\nclass App extends React.Component {\n\n\n  videoRef = React.createRef();\n  canvasRef = React.createRef();\n\n  state = {\n    model: null,\n    preview: \"\",\n    userid: \"\",\n    proctorid: \"\",\n    examid: \"\",\n    predictions: []\n  };\n\n\n  componentDidMount() {\n    // display ? handleScreen1() : handleScreen2();\n  }\n  constructor(props) {\n\n    super(props)\n    this.state = {\n      model: null,\n      preview: \"\",\n      userid: \"\",\n      proctorid: \"\",\n      examid: \"\",\n      predictions: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleuserChange = this.handleuserChange.bind(this)\n    this.handleExamChange = this.handleExamChange.bind(this)\n    this.handleproctorChange = this.handleproctorChange.bind(this)\n  }\n\n  startcamera() {\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n      const webCamPromise = navigator.mediaDevices\n        .getUserMedia({\n          audio: false,\n          video: {\n            facingMode: \"user\"\n          }\n        })\n        .then(stream => {\n          window.stream = stream;\n          this.videoRef.current.srcObject = stream;\n          return new Promise((resolve, reject) => {\n            this.videoRef.current.onloadedmetadata = () => {\n              resolve();\n            };\n          });\n        });\n\n      const modelPromise = tf.loadGraphModel(weights).then(model => {\n        this.setState({\n          model: model\n        });\n        console.log(\"model ready......\", model)\n        return this.state.model;\n      });\n      Promise.all([modelPromise, webCamPromise])\n        .then(values => {\n          // this.detectFrame(this.videoRef.current, values[0]);\n          this.checkwithVideo()\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n  pushToDynamodb = (predict) => {\n    let test = {\n      \"id\": `${this.state.userid}_${this.state.examid}`,\n      \"eid\": this.state.examid,\n      \"cid\": this.state.userid,\n      \"ts\": predict.timestamp,\n      \"pid\": this.state.proctorid,\n      \"predict\": JSON.stringify(predict)\n    }\n    axios.post('https://sh3x2x9en3.execute-api.us-east-1.amazonaws.com/test/', test, { headers: headers })\n      .then(response => {\n        //console.log(response)\n      }).catch(err => {\n        //console.log(err)\n      })\n  }\n\n  checkwithVideo = () => {\n    let videointerval;\n    if (videointerval === undefined) {\n      videointerval = setInterval(() => {\n        this.onImageChange()\n      }, 100)\n    }\n  };\n\n  cropToCanvas = (image, canvas, ctx) => {\n    const naturalWidth = image.videoWidth;\n    const naturalHeight = image.videoHeight;\n    // canvas.width = image.width;\n    // canvas.height = image.height;\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    const ratio = Math.min(canvas.width / image.videoWidth, canvas.height / image.videoHeight);\n    const newWidth = Math.round(naturalWidth * ratio);\n    const newHeight = Math.round(naturalHeight * ratio);\n    ctx.drawImage(this.videoRef.current, 0, 0, naturalWidth, naturalHeight, (canvas.width - newWidth) / 2, (canvas.height - newHeight) / 2, newWidth, newHeight,);\n  };\n\n  onImageChange = () => {\n    const canvas = this.canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    // this.cropToCanvas(this.videoRef.current, canvas, ctx);\n    const input = tf.tidy(() => {\n      return tf.image.resizeBilinear(tf.browser.fromPixels(this.videoRef.current), [modelWeight, modelHeight])\n        .div(255.0).expandDims(0);\n    });\n    this.state.model.executeAsync(input).then(res => {\n      let detectiondata = {\n        detection: [],\n        timestamp: \"\"\n      };\n      // Font options.\n      const font = \"16px sans-serif\";\n      ctx.font = font;\n      ctx.textBaseline = \"top\";\n      const [boxes, scores, classes, valid_detections] = res;\n      const boxes_data = boxes.dataSync();\n      const scores_data = scores.dataSync();\n      const classes_data = classes.dataSync();\n      const valid_detections_data = valid_detections.dataSync()[0];\n      tf.dispose(res)\n      tf.dispose(input)\n\n\n\n      var i;\n      for (i = 0; i < valid_detections_data; ++i) {\n        let [x1, y1, x2, y2] = boxes_data.slice(i * 4, (i + 1) * 4);\n        x1 *= canvas.width;\n        x2 *= canvas.width;\n        y1 *= canvas.height;\n        y2 *= canvas.height;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const klass = names[classes_data[i]];\n        const score = scores_data[i].toFixed(2);\n        // Draw the bounding box.\n        ctx.strokeStyle = \"#00FFFF\";\n        ctx.lineWidth = 4;\n        ctx.strokeRect(x1, y1, width, height);\n        //console.log('x1',x1)\n        // Draw the label background.\n        ctx.fillStyle = \"#00FFFF\";\n        const textWidth = ctx.measureText(klass + \":\" + score).width;\n        const textHeight = parseInt(font, 10); // base 10\n        ctx.fillRect(x1, y1, textWidth + 4, textHeight + 4);\n      }\n      for (i = 0; i < valid_detections_data; ++i) {\n        let [x1, y1, ,] = boxes_data.slice(i * 4, (i + 1) * 4);\n        x1 *= canvas.width;\n        y1 *= canvas.height;\n        const klass = names[classes_data[i]];\n        const score = scores_data[i].toFixed(2);\n        //console.log('klass ',klass, ', score', score)\n        detectiondata.detection.push({ \"class\": klass, \"score\": score })\n        // Draw the text last to ensure it's on top.\n        ctx.fillStyle = \"#000000\";\n        ctx.fillText(klass + \":\" + score, x1, y1);\n      }\n      detectiondata.timestamp = Date.now()\n      if (detectiondata.detection && detectiondata.detection.length > 0) {\n        this.pushToDynamodb(detectiondata)\n      }\n      // this.onImageChange()\n      // console.log(score)\n    });\n  };\n\n  handleuserChange(event) {\n    this.setState({\n      userid: event.target.value\n    })\n  }\n\n  handleExamChange(event) {\n    this.setState({\n      examid: event.target.value\n    })\n  }\n\n  handleproctorChange(event) {\n    this.setState({\n      proctorid: event.target.value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.userid !== \"\" && this.state.examid !== \"\" && this.state.proctorid !== \"\") {\n      this.startcamera()\n    }\n  }\n\n\n\n\n\n\n\n\n  render() {\n\n    return (\n\n      // <div className=\"container\">\n      <div className=\"row \">\n        <div className=\"col-md-2\">\n          <h1 className=\"heading\">Object Detection </h1>\n          <form className=\"p-2\" onSubmit={this.handleSubmit}>\n            <div className=\"form-group mar\">\n              <label htmlFor=\"candiadteID\">Candidate ID:</label>\n              <input type=\"text\" className='form-control' id='candiadateId' value={this.state.userid} placeholder=\"enter candidateId\" onChange={this.handleuserChange} />\n            </div>\n            <div className=\"form-group  mar\">\n              <label htmlFor=\"examID\">Exam ID:</label>\n              <input type=\"text\" className='form-control' value={this.state.examid} onChange={this.handleExamChange} placeholder='enter examID' />\n            </div>\n            <div className=\"form-group  mar\">\n              <label htmlFor=\"proctorID\">Proctor ID:</label>\n              <input type=\"text\" className='form-control' value={this.state.proctorid} onChange={this.handleproctorChange} placeholder='enter proctorID' />\n            </div>\n            <input type=\"submit\" className=\"btn button-width text-white\" value=\"Submit\" />\n\n          </form>\n\n        </div>\n\n\n\n        <div className=\"col-md-7 style1\">\n\n          <video\n            className=\"test\"\n            autoPlay\n            // style={{ visibility: 'hidden' }}\n            muted\n            ref={this.videoRef}\n            width=\"500px\"\n            height=\"800px\"\n          />\n\n        </div>\n\n\n        <div className=\" canva\">\n          <h1 className=\"heading\">Proctor View </h1>\n          <canvas\n            className=\"size\"\n            ref={this.canvasRef}\n            style={{ visibility: '' }}\n            width=\"500\"\n            height=\"500\"\n          />\n        </div>\n\n\n\n\n      </div>\n      // </div>\n    );\n  }\n}\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}